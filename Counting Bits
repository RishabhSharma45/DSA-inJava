class Solution {
     String bits(int n) {
        if (n == 0) return "0";
        StringBuilder sb = new StringBuilder();
        while (n > 0) {
            sb.append(n % 2);
            n /= 2;
        }
        return sb.reverse().toString(); // Reverse the string to get the correct binary representation
    }

     int count(String s) {
        int ans = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                ans++;
            }
        }
        return ans;
    }

     public int[] countBits(int n) {
        int[] ans = new int[n + 1]; // Array size should be n+1 to include 0 to n
        for (int i = 0; i <= n; i++) {
            String binary = bits(i); // Convert each number to binary
            ans[i] = count(binary); // Count the number of 1's
        }
        return ans;
    }
}
